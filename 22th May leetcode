class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        vector<int> res;
        if (!nums.size()) 
            return res;
        vector<vector<int>> buckets(nums.size() + 1);
        unordered_map<int, int> cnt;

        for (auto num : nums)
            cnt[num]++;
        
        for (auto kv : cnt) {
            buckets[kv.second].push_back(kv.first);
        }

        for (int i = buckets.size() - 1; i >= 0; --i) {
            for (int j = 0; j < buckets[i].size(); ++j){
                res.push_back(buckets[i][j]);
                if (res.size() == k) 
                    return res;
            }
        }
        return res;
    }
};
