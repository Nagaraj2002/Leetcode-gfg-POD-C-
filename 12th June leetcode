class Solution {
public:
    vector<string> summaryRanges(vector<int>& nums) {
        vector<string> ranges;
        if(nums.size() == 0) return ranges;
        nums.push_back(INT_MAX);
        int start = nums[0];
        for(int i=0; i<nums.size()-1; i++){
            //use 1.0 to tackle the memory overflow problem
            if(1.0+nums[i] != nums[i+1]){
                if(start == nums[i]) ranges.push_back(to_string(nums[i]));
                else ranges.push_back(to_string(start) + "->" + to_string(nums[i]));
                start = nums[i+1];
            }
        }
        if(ranges.size() == 0) ranges.push_back(to_string(start) + "->" + to_string(nums[nums.size()-2]));
        return ranges;
    }
};
