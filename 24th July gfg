/* A binary tree node has data, pointer to left child
   and a pointer to right child 
struct Node
{
    int data;
    struct Node* left;
    struct Node* right;
    
    Node(int x){
        data = x;
        left = right = NULL;
    }
}; */

// Should return  right view of tree
class Solution
{
    public:
    //Function to return list containing elements of right view of binary tree.
    int height(Node* root){
        if(root==NULL) return 0;
        return max(height(root->left),height(root->right))+1;
    }
    void rightView(Node* root,vector<int>& ans,int lvl){
        if(root==NULL) return;
        if(ans[lvl]==-1) ans[lvl]=root->data;
        rightView(root->right,ans,lvl+1);
        rightView(root->left,ans,lvl+1);
    }
    vector<int> rightView(Node *root)
    {
        int h=height(root);
        vector<int> ans(h,-1);
        rightView(root,ans,0);
        return ans;
    }
};
