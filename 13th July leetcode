class Solution {
public:
    bool dfs(int node,vector<int>adj[],vector<bool>&vis,vector<bool>&path_vis){
        vis[node]=true;
        path_vis[node]=true;
        for(auto it:adj[node]){
            if(!vis[it]){
              if(dfs(it,adj,vis,path_vis)==true)return true;
            }
            else if(path_vis[it])return true;
        }
        path_vis[node]=false;
        return false;
    }
    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {
        int n=prerequisites.size();
        vector<int>adj[numCourses];
        for(int i=0;i<n;i++){
            adj[prerequisites[i][0]].push_back(prerequisites[i][1]);
        }
        vector<bool>vis(numCourses,0);
        vector<bool>path_vis(numCourses,0);
        for(int i=0;i<numCourses;i++){
            if(!vis[i]){
                if(dfs(i,adj,vis,path_vis)==true)return false;
            }
        }
        return true;
    }
};
