class Solution {
public:
    int longestArithSeqLength(vector<int>& nums) {
        int n=nums.size();
        vector<vector<int>> dp(n,vector<int>(1001,1));//1001 as the low is 0 and high is 500 so the highest diff=500 and lowest differnce is -500
        //1001 as the dp[i][j] means the length of the subsqeunce as nums[i] at the start with the differnce j
        int ans=0;
        for(int i=n-2;i>=0;i--){//starting from bottom 
            for(int j=n-1;j>i;j--){
                int diff=nums[j]-nums[i]+500;//indexing as min differnce can be -500
                dp[i][diff]=dp[j][diff]+1;
                ans=max(ans,dp[i][diff]);
            }
        }
        if(ans==1){//if ans is 1 then no subsequence was found
            return 0;
        }
        return ans;
    }
};
