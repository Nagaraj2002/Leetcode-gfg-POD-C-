class Solution {
public:
    using ll = long long;
    unordered_map<ll,ll>dp[1001];
    ll n;
    ll rec(ll level, ll diff, vector<int>&rods){
        if(level>=n){
            if(diff==0) return 0;
            return INT_MIN;
        }
        if(dp[level].find(diff)!=dp[level].end()) return dp[level][diff];
        ll ans1=0,ans2=0,ans3=0, ans=0;
        ans1 = rec(level+1,diff,rods);
        ans2 = rods[level]+rec(level+1, diff+rods[level],rods);
        ans3 = rec(level+1,diff-rods[level], rods);
        ans = max({ans1, ans2, ans3});
        return dp[level][diff]=ans;
    }
    int tallestBillboard(vector<int>& rods) {
        n = rods.size();
        return rec(0,0,rods);
    }
};
